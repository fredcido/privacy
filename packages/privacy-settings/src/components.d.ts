/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  Setting,
} from './models/Setting';

export namespace Components {
  interface UpcButton {
    /**
    * The label
    */
    'label': string;
  }
  interface UpcCheckbox {
    /**
    * If `true`, the checkbox is selected.
    */
    'checked': boolean;
    /**
    * The label
    */
    'label': string;
  }
  interface UpcForm {
    'settings': Setting;
  }
  interface UpcPrivacySettings {
    'baseApi': string;
    'productId': string;
    'settings': Setting;
  }
  interface UpcRadio {
    /**
    * If `true`, the checkbox is selected.
    */
    'checked': boolean;
    /**
    * The label
    */
    'label': string;
    /**
    * The name
    */
    'name': string;
  }
  interface UpcText {
    /**
    * The label
    */
    'label': string;
    /**
    * The name
    */
    'name': string;
    /**
    * The initial value. Can be updated at runtime.
    */
    'value': string;
  }
  interface UpcThemePrimary {}
  interface UpcThemeSecondary {}
}

declare global {


  interface HTMLUpcButtonElement extends Components.UpcButton, HTMLStencilElement {}
  var HTMLUpcButtonElement: {
    prototype: HTMLUpcButtonElement;
    new (): HTMLUpcButtonElement;
  };

  interface HTMLUpcCheckboxElement extends Components.UpcCheckbox, HTMLStencilElement {}
  var HTMLUpcCheckboxElement: {
    prototype: HTMLUpcCheckboxElement;
    new (): HTMLUpcCheckboxElement;
  };

  interface HTMLUpcFormElement extends Components.UpcForm, HTMLStencilElement {}
  var HTMLUpcFormElement: {
    prototype: HTMLUpcFormElement;
    new (): HTMLUpcFormElement;
  };

  interface HTMLUpcPrivacySettingsElement extends Components.UpcPrivacySettings, HTMLStencilElement {}
  var HTMLUpcPrivacySettingsElement: {
    prototype: HTMLUpcPrivacySettingsElement;
    new (): HTMLUpcPrivacySettingsElement;
  };

  interface HTMLUpcRadioElement extends Components.UpcRadio, HTMLStencilElement {}
  var HTMLUpcRadioElement: {
    prototype: HTMLUpcRadioElement;
    new (): HTMLUpcRadioElement;
  };

  interface HTMLUpcTextElement extends Components.UpcText, HTMLStencilElement {}
  var HTMLUpcTextElement: {
    prototype: HTMLUpcTextElement;
    new (): HTMLUpcTextElement;
  };

  interface HTMLUpcThemePrimaryElement extends Components.UpcThemePrimary, HTMLStencilElement {}
  var HTMLUpcThemePrimaryElement: {
    prototype: HTMLUpcThemePrimaryElement;
    new (): HTMLUpcThemePrimaryElement;
  };

  interface HTMLUpcThemeSecondaryElement extends Components.UpcThemeSecondary, HTMLStencilElement {}
  var HTMLUpcThemeSecondaryElement: {
    prototype: HTMLUpcThemeSecondaryElement;
    new (): HTMLUpcThemeSecondaryElement;
  };
  interface HTMLElementTagNameMap {
    'upc-button': HTMLUpcButtonElement;
    'upc-checkbox': HTMLUpcCheckboxElement;
    'upc-form': HTMLUpcFormElement;
    'upc-privacy-settings': HTMLUpcPrivacySettingsElement;
    'upc-radio': HTMLUpcRadioElement;
    'upc-text': HTMLUpcTextElement;
    'upc-theme-primary': HTMLUpcThemePrimaryElement;
    'upc-theme-secondary': HTMLUpcThemeSecondaryElement;
  }
}

declare namespace LocalJSX {
  interface UpcButton {
    /**
    * The label
    */
    'label'?: string;
  }
  interface UpcCheckbox {
    /**
    * If `true`, the checkbox is selected.
    */
    'checked'?: boolean;
    /**
    * The label
    */
    'label'?: string;
  }
  interface UpcForm {
    'settings'?: Setting;
  }
  interface UpcPrivacySettings {
    'baseApi'?: string;
    'productId'?: string;
    'settings'?: Setting;
  }
  interface UpcRadio {
    /**
    * If `true`, the checkbox is selected.
    */
    'checked'?: boolean;
    /**
    * The label
    */
    'label'?: string;
    /**
    * The name
    */
    'name'?: string;
  }
  interface UpcText {
    /**
    * The label
    */
    'label'?: string;
    /**
    * The name
    */
    'name'?: string;
    /**
    * The initial value. Can be updated at runtime.
    */
    'value'?: string;
  }
  interface UpcThemePrimary {}
  interface UpcThemeSecondary {}

  interface IntrinsicElements {
    'upc-button': UpcButton;
    'upc-checkbox': UpcCheckbox;
    'upc-form': UpcForm;
    'upc-privacy-settings': UpcPrivacySettings;
    'upc-radio': UpcRadio;
    'upc-text': UpcText;
    'upc-theme-primary': UpcThemePrimary;
    'upc-theme-secondary': UpcThemeSecondary;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'upc-button': LocalJSX.UpcButton & JSXBase.HTMLAttributes<HTMLUpcButtonElement>;
      'upc-checkbox': LocalJSX.UpcCheckbox & JSXBase.HTMLAttributes<HTMLUpcCheckboxElement>;
      'upc-form': LocalJSX.UpcForm & JSXBase.HTMLAttributes<HTMLUpcFormElement>;
      'upc-privacy-settings': LocalJSX.UpcPrivacySettings & JSXBase.HTMLAttributes<HTMLUpcPrivacySettingsElement>;
      'upc-radio': LocalJSX.UpcRadio & JSXBase.HTMLAttributes<HTMLUpcRadioElement>;
      'upc-text': LocalJSX.UpcText & JSXBase.HTMLAttributes<HTMLUpcTextElement>;
      'upc-theme-primary': LocalJSX.UpcThemePrimary & JSXBase.HTMLAttributes<HTMLUpcThemePrimaryElement>;
      'upc-theme-secondary': LocalJSX.UpcThemeSecondary & JSXBase.HTMLAttributes<HTMLUpcThemeSecondaryElement>;
    }
  }
}


